/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface GroupDTO
 */
export interface GroupDTO {
    /**
     * id of the group
     * @type {number}
     * @memberof GroupDTO
     */
    id: number;
    /**
     * name of the group
     * @type {string}
     * @memberof GroupDTO
     */
    name: string;
    /**
     * id of the user who created/owns the group
     * @type {string}
     * @memberof GroupDTO
     */
    ownerId: string;
    /**
     * dateTime of creation of the group
     * @type {Date}
     * @memberof GroupDTO
     */
    createdAt: Date;
}

/**
 * Check if a given object implements the GroupDTO interface.
 */
export function instanceOfGroupDTO(value: object): value is GroupDTO {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('ownerId' in value) || value['ownerId'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    return true;
}

export function GroupDTOFromJSON(json: any): GroupDTO {
    return GroupDTOFromJSONTyped(json, false);
}

export function GroupDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): GroupDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'ownerId': json['owner_id'],
        'createdAt': (new Date(json['created_at'])),
    };
}

export function GroupDTOToJSON(json: any): GroupDTO {
    return GroupDTOToJSONTyped(json, false);
}

export function GroupDTOToJSONTyped(value?: GroupDTO | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'ownerId': value['ownerId'],
        'createdAt': ((value['createdAt']).toISOString()),
    };
}

