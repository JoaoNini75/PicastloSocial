/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface GroupMembershipDTO
 */
export interface GroupMembershipDTO {
    /**
     * username of the user that is a member of the group
     * @type {string}
     * @memberof GroupMembershipDTO
     */
    username: string;
    /**
     * id of the group that has a member identified by userId
     * @type {number}
     * @memberof GroupMembershipDTO
     */
    groupId: number;
    /**
     * 
     * @type {string}
     * @memberof GroupMembershipDTO
     */
    name: string;
    /**
     * 
     * @type {Date}
     * @memberof GroupMembershipDTO
     */
    createdAt: Date;
}

/**
 * Check if a given object implements the GroupMembershipDTO interface.
 */
export function instanceOfGroupMembershipDTO(value: object): value is GroupMembershipDTO {
    if (!('username' in value) || value['username'] === undefined) return false;
    if (!('groupId' in value) || value['groupId'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    return true;
}

export function GroupMembershipDTOFromJSON(json: any): GroupMembershipDTO {
    return GroupMembershipDTOFromJSONTyped(json, false);
}

export function GroupMembershipDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): GroupMembershipDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'username': json['username'],
        'groupId': json['group_id'],
        'name': json['name'],
        'createdAt': (new Date(json['created_at'])),
    };
}

export function GroupMembershipDTOToJSON(json: any): GroupMembershipDTO {
    return GroupMembershipDTOToJSONTyped(json, false);
}

export function GroupMembershipDTOToJSONTyped(value?: GroupMembershipDTO | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'username': value['username'],
        'groupId': value['groupId'],
        'name': value['name'],
        'createdAt': ((value['createdAt']).toISOString()),
    };
}

