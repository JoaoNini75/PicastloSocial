/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ImageDTO
 */
export interface ImageDTO {
    /**
     * Unique identifier of the image
     * @type {number}
     * @memberof ImageDTO
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof ImageDTO
     */
    imageData: string;
    /**
     * User who uploaded the image
     * @type {string}
     * @memberof ImageDTO
     */
    uploadedBy: string;
    /**
     * Timestamp for when the image was created
     * @type {Date}
     * @memberof ImageDTO
     */
    createdAt: Date;
}

/**
 * Check if a given object implements the ImageDTO interface.
 */
export function instanceOfImageDTO(value: object): value is ImageDTO {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('imageData' in value) || value['imageData'] === undefined) return false;
    if (!('uploadedBy' in value) || value['uploadedBy'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    return true;
}

export function ImageDTOFromJSON(json: any): ImageDTO {
    return ImageDTOFromJSONTyped(json, false);
}

export function ImageDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): ImageDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'imageData': json['imageData'],
        'uploadedBy': json['uploaded_by'],
        'createdAt': (new Date(json['created_at'])),
    };
}

export function ImageDTOToJSON(json: any): ImageDTO {
    return ImageDTOToJSONTyped(json, false);
}

export function ImageDTOToJSONTyped(value?: ImageDTO | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'imageData': value['imageData'],
        'uploaded_by': value['uploadedBy'],
        'created_at': ((value['createdAt']).toISOString()),
    };
}

